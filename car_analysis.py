# -*- coding: utf-8 -*-
"""car analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z96XTgIBadDdNmb8k7qCVd-DL4uSFUVc
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

path = "/content/2. Cars Data1.csv"
df = pd.read_csv(path)

df.head()

df.shape

"""here we are finding the null values of the entire dataset"""

df.isnull()

"""here sum value is calculated to find whether the null values are present in the dataset

"""

df.isnull().sum()

"""on checking the above dataset we could see null values at the column cylender"""

df['Cylinders']

"""here we hac=ve seen null values as per question we need to replace the null values sum by their mean"""

df['Cylinders'].fillna(df['Cylinders'].mean())

df

df.isnull().sum()

"""still the column is showing some null values to change it permenanatly we used"""

df['Cylinders'].fillna(df['Cylinders'].mean(),inplace =True)

df.isnull().sum()

"""null values from cylender columns are removed as others are showing 4 we need to follow the same procedure to make 0(to fill the null values with their means)"""

df.columns

df[['Make', 'Model', 'Type', 'Origin', 'DriveTrain', 'MSRP', 'Invoice',
'EngineSize','Horsepower', 'MPG_City', 'MPG_Highway',
'Weight', 'Wheelbase', 'Length']].fillna(df[['Make', 'Model', 'Type', 'Origin', 'DriveTrain', 'MSRP', 'Invoice',
'EngineSize','Horsepower', 'MPG_City', 'MPG_Highway',
'Weight', 'Wheelbase', 'Length']].mean(), axis=0).mean()

df.isnull().sum()

df.isnull().sum()

"""using df=df.dropna() null values are removed"""

df = df.dropna()

"""using the above cocnept duplicates are removed from the dataset and dataset is cleaned from the null and the all other columns is replaced with mean values"""

df.head(2)

df['Make'].value_counts()

"""using the above example we have found num of cars manufacturers and occurence of each data frame"""

df.head(2)

df[df['Origin'].isin(['Asia','Europe'])]

df.head(2)

df[df['Weight']>4000]

df[~(df['Weight']>4000)]

"""on using the above command we can get all records of weight less than 4000"""

df.shape

df.head(2)

df['MPG_City']= df['MPG_City'].apply(lambda x:x+3)

df